/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PROTOCOL_H_RPCGEN
#define _PROTOCOL_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define QEMUD_UUID_RAW_LEN 16
#define QEMUD_MAX_NAME_LEN 50
#define QEMUD_MAX_XML_LEN 4096
#define QEMUD_MAX_IFNAME_LEN 50
#define QEMUD_MAX_NUM_DOMAINS 100
#define QEMUD_MAX_NUM_NETWORKS 100
#define QEMUD_MAX_DOMAINS_NAME_BUF 5000
#define QEMUD_MAX_NETWORKS_NAME_BUF 5000
#define QEMUD_MAX_ERROR_LEN 1024

enum qemud_domain_runstate {
	QEMUD_STATE_RUNNING = 1,
	QEMUD_STATE_PAUSED = 1 + 1,
	QEMUD_STATE_STOPPED = 1 + 2,
};
typedef enum qemud_domain_runstate qemud_domain_runstate;

enum qemud_packet_client_data_type {
	QEMUD_CLIENT_PKT_GET_VERSION = 0,
	QEMUD_CLIENT_PKT_GET_NODEINFO = 1,
	QEMUD_CLIENT_PKT_LIST_DOMAINS = 2,
	QEMUD_CLIENT_PKT_NUM_DOMAINS = 3,
	QEMUD_CLIENT_PKT_DOMAIN_CREATE = 4,
	QEMUD_CLIENT_PKT_DOMAIN_LOOKUP_BY_ID = 5,
	QEMUD_CLIENT_PKT_DOMAIN_LOOKUP_BY_UUID = 6,
	QEMUD_CLIENT_PKT_DOMAIN_LOOKUP_BY_NAME = 7,
	QEMUD_CLIENT_PKT_DOMAIN_SUSPEND = 8,
	QEMUD_CLIENT_PKT_DOMAIN_RESUME = 9,
	QEMUD_CLIENT_PKT_DOMAIN_DESTROY = 10,
	QEMUD_CLIENT_PKT_DOMAIN_GET_INFO = 11,
	QEMUD_CLIENT_PKT_DOMAIN_SAVE = 12,
	QEMUD_CLIENT_PKT_DOMAIN_RESTORE = 13,
	QEMUD_CLIENT_PKT_DUMP_XML = 14,
	QEMUD_CLIENT_PKT_LIST_DEFINED_DOMAINS = 15,
	QEMUD_CLIENT_PKT_NUM_DEFINED_DOMAINS = 16,
	QEMUD_CLIENT_PKT_DOMAIN_START = 17,
	QEMUD_CLIENT_PKT_DOMAIN_DEFINE = 18,
	QEMUD_CLIENT_PKT_DOMAIN_UNDEFINE = 19,
	QEMUD_CLIENT_PKT_NUM_NETWORKS = 20,
	QEMUD_CLIENT_PKT_LIST_NETWORKS = 21,
	QEMUD_CLIENT_PKT_NUM_DEFINED_NETWORKS = 22,
	QEMUD_CLIENT_PKT_LIST_DEFINED_NETWORKS = 23,
	QEMUD_CLIENT_PKT_NETWORK_LOOKUP_BY_UUID = 24,
	QEMUD_CLIENT_PKT_NETWORK_LOOKUP_BY_NAME = 25,
	QEMUD_CLIENT_PKT_NETWORK_CREATE = 26,
	QEMUD_CLIENT_PKT_NETWORK_DEFINE = 27,
	QEMUD_CLIENT_PKT_NETWORK_UNDEFINE = 28,
	QEMUD_CLIENT_PKT_NETWORK_START = 29,
	QEMUD_CLIENT_PKT_NETWORK_DESTROY = 30,
	QEMUD_CLIENT_PKT_NETWORK_DUMP_XML = 31,
	QEMUD_CLIENT_PKT_NETWORK_GET_BRIDGE_NAME = 32,
	QEMUD_CLIENT_PKT_DOMAIN_GET_AUTOSTART = 33,
	QEMUD_CLIENT_PKT_DOMAIN_SET_AUTOSTART = 34,
	QEMUD_CLIENT_PKT_NETWORK_GET_AUTOSTART = 35,
	QEMUD_CLIENT_PKT_NETWORK_SET_AUTOSTART = 36,
	QEMUD_CLIENT_PKT_GET_CAPABILITIES = 37,
	QEMUD_CLIENT_PKT_MAX = 38,
};
typedef enum qemud_packet_client_data_type qemud_packet_client_data_type;

enum qemud_packet_server_data_type {
	QEMUD_SERVER_PKT_FAILURE = 0,
	QEMUD_SERVER_PKT_GET_VERSION = 0 + 1,
	QEMUD_SERVER_PKT_GET_NODEINFO = 0 + 2,
	QEMUD_SERVER_PKT_LIST_DOMAINS = 0 + 3,
	QEMUD_SERVER_PKT_NUM_DOMAINS = 0 + 4,
	QEMUD_SERVER_PKT_DOMAIN_CREATE = 0 + 5,
	QEMUD_SERVER_PKT_DOMAIN_LOOKUP_BY_ID = 0 + 6,
	QEMUD_SERVER_PKT_DOMAIN_LOOKUP_BY_UUID = 0 + 7,
	QEMUD_SERVER_PKT_DOMAIN_LOOKUP_BY_NAME = 0 + 8,
	QEMUD_SERVER_PKT_DOMAIN_SUSPEND = 0 + 9,
	QEMUD_SERVER_PKT_DOMAIN_RESUME = 0 + 10,
	QEMUD_SERVER_PKT_DOMAIN_DESTROY = 0 + 11,
	QEMUD_SERVER_PKT_DOMAIN_GET_INFO = 0 + 12,
	QEMUD_SERVER_PKT_DOMAIN_SAVE = 0 + 13,
	QEMUD_SERVER_PKT_DOMAIN_RESTORE = 0 + 14,
	QEMUD_SERVER_PKT_DUMP_XML = 0 + 15,
	QEMUD_SERVER_PKT_LIST_DEFINED_DOMAINS = 0 + 16,
	QEMUD_SERVER_PKT_NUM_DEFINED_DOMAINS = 0 + 17,
	QEMUD_SERVER_PKT_DOMAIN_START = 0 + 18,
	QEMUD_SERVER_PKT_DOMAIN_DEFINE = 0 + 19,
	QEMUD_SERVER_PKT_DOMAIN_UNDEFINE = 0 + 20,
	QEMUD_SERVER_PKT_NUM_NETWORKS = 0 + 21,
	QEMUD_SERVER_PKT_LIST_NETWORKS = 0 + 22,
	QEMUD_SERVER_PKT_NUM_DEFINED_NETWORKS = 0 + 23,
	QEMUD_SERVER_PKT_LIST_DEFINED_NETWORKS = 0 + 24,
	QEMUD_SERVER_PKT_NETWORK_LOOKUP_BY_UUID = 0 + 25,
	QEMUD_SERVER_PKT_NETWORK_LOOKUP_BY_NAME = 0 + 26,
	QEMUD_SERVER_PKT_NETWORK_CREATE = 0 + 27,
	QEMUD_SERVER_PKT_NETWORK_DEFINE = 0 + 28,
	QEMUD_SERVER_PKT_NETWORK_UNDEFINE = 0 + 29,
	QEMUD_SERVER_PKT_NETWORK_START = 0 + 30,
	QEMUD_SERVER_PKT_NETWORK_DESTROY = 0 + 31,
	QEMUD_SERVER_PKT_NETWORK_DUMP_XML = 0 + 32,
	QEMUD_SERVER_PKT_NETWORK_GET_BRIDGE_NAME = 0 + 33,
	QEMUD_SERVER_PKT_DOMAIN_GET_AUTOSTART = 0 + 34,
	QEMUD_SERVER_PKT_DOMAIN_SET_AUTOSTART = 0 + 35,
	QEMUD_SERVER_PKT_NETWORK_GET_AUTOSTART = 0 + 36,
	QEMUD_SERVER_PKT_NETWORK_SET_AUTOSTART = 0 + 37,
	QEMUD_SERVER_PKT_GET_CAPABILITIES = 0 + 38,
	QEMUD_SERVER_PKT_MAX = 0 + 39,
};
typedef enum qemud_packet_server_data_type qemud_packet_server_data_type;

struct qemud_packet_failure_reply {
	uint32_t code;
	char message[QEMUD_MAX_ERROR_LEN];
};
typedef struct qemud_packet_failure_reply qemud_packet_failure_reply;

struct qemud_packet_get_version_reply {
	uint32_t versionNum;
};
typedef struct qemud_packet_get_version_reply qemud_packet_get_version_reply;

struct qemud_packet_get_node_info_reply {
	char model[32];
	uint32_t memory;
	uint32_t cpus;
	uint32_t mhz;
	uint32_t nodes;
	uint32_t sockets;
	uint32_t cores;
	uint32_t threads;
};
typedef struct qemud_packet_get_node_info_reply qemud_packet_get_node_info_reply;

struct qemud_packet_get_capabilities_reply {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_get_capabilities_reply qemud_packet_get_capabilities_reply;

struct qemud_packet_list_domains_reply {
	int32_t numDomains;
	int32_t domains[QEMUD_MAX_NUM_DOMAINS];
};
typedef struct qemud_packet_list_domains_reply qemud_packet_list_domains_reply;

struct qemud_packet_num_domains_reply {
	int32_t numDomains;
};
typedef struct qemud_packet_num_domains_reply qemud_packet_num_domains_reply;

struct qemud_packet_domain_create_request {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_domain_create_request qemud_packet_domain_create_request;

struct qemud_packet_domain_create_reply {
	int32_t id;
	u_char uuid[QEMUD_UUID_RAW_LEN];
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_domain_create_reply qemud_packet_domain_create_reply;

struct qemud_packet_domain_lookup_by_id_request {
	int32_t id;
};
typedef struct qemud_packet_domain_lookup_by_id_request qemud_packet_domain_lookup_by_id_request;

struct qemud_packet_domain_lookup_by_id_reply {
	u_char uuid[QEMUD_UUID_RAW_LEN];
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_domain_lookup_by_id_reply qemud_packet_domain_lookup_by_id_reply;

struct qemud_packet_domain_lookup_by_name_request {
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_domain_lookup_by_name_request qemud_packet_domain_lookup_by_name_request;

struct qemud_packet_domain_lookup_by_name_reply {
	int32_t id;
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_lookup_by_name_reply qemud_packet_domain_lookup_by_name_reply;

struct qemud_packet_domain_lookup_by_uuid_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_lookup_by_uuid_request qemud_packet_domain_lookup_by_uuid_request;

struct qemud_packet_domain_lookup_by_uuid_reply {
	int32_t id;
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_domain_lookup_by_uuid_reply qemud_packet_domain_lookup_by_uuid_reply;

struct qemud_packet_domain_suspend_request {
	int32_t id;
};
typedef struct qemud_packet_domain_suspend_request qemud_packet_domain_suspend_request;

struct qemud_packet_domain_resume_request {
	int32_t id;
};
typedef struct qemud_packet_domain_resume_request qemud_packet_domain_resume_request;

struct qemud_packet_domain_destroy_request {
	int32_t id;
};
typedef struct qemud_packet_domain_destroy_request qemud_packet_domain_destroy_request;

struct qemud_packet_domain_get_info_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_get_info_request qemud_packet_domain_get_info_request;

struct qemud_packet_domain_get_info_reply {
	uint64_t cpuTime;
	uint32_t runstate;
	uint32_t memory;
	uint32_t maxmem;
	uint32_t nrVirtCpu;
};
typedef struct qemud_packet_domain_get_info_reply qemud_packet_domain_get_info_reply;

struct qemud_packet_domain_save_request {
	int32_t id;
	char file[PATH_MAX];
};
typedef struct qemud_packet_domain_save_request qemud_packet_domain_save_request;

struct qemud_packet_domain_restore_request {
	char file[PATH_MAX];
};
typedef struct qemud_packet_domain_restore_request qemud_packet_domain_restore_request;

struct qemud_packet_domain_restore_reply {
	int32_t id;
};
typedef struct qemud_packet_domain_restore_reply qemud_packet_domain_restore_reply;

struct qemud_packet_domain_dump_xml_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_dump_xml_request qemud_packet_domain_dump_xml_request;

struct qemud_packet_domain_dump_xml_reply {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_domain_dump_xml_reply qemud_packet_domain_dump_xml_reply;

struct qemud_packet_list_defined_domains_reply {
	uint32_t numDomains;
	char domains[QEMUD_MAX_DOMAINS_NAME_BUF];
};
typedef struct qemud_packet_list_defined_domains_reply qemud_packet_list_defined_domains_reply;

struct qemud_packet_num_defined_domains_reply {
	uint32_t numDomains;
};
typedef struct qemud_packet_num_defined_domains_reply qemud_packet_num_defined_domains_reply;

struct qemud_packet_domain_start_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_start_request qemud_packet_domain_start_request;

struct qemud_packet_domain_start_reply {
	int32_t id;
};
typedef struct qemud_packet_domain_start_reply qemud_packet_domain_start_reply;

struct qemud_packet_domain_define_request {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_domain_define_request qemud_packet_domain_define_request;

struct qemud_packet_domain_define_reply {
	u_char uuid[QEMUD_UUID_RAW_LEN];
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_domain_define_reply qemud_packet_domain_define_reply;

struct qemud_packet_domain_undefine_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_undefine_request qemud_packet_domain_undefine_request;

struct qemud_packet_num_networks_reply {
	uint32_t numNetworks;
};
typedef struct qemud_packet_num_networks_reply qemud_packet_num_networks_reply;

struct qemud_packet_list_networks_reply {
	uint32_t numNetworks;
	char networks[QEMUD_MAX_NETWORKS_NAME_BUF];
};
typedef struct qemud_packet_list_networks_reply qemud_packet_list_networks_reply;

struct qemud_packet_num_defined_networks_reply {
	uint32_t numNetworks;
};
typedef struct qemud_packet_num_defined_networks_reply qemud_packet_num_defined_networks_reply;

struct qemud_packet_list_defined_networks_reply {
	uint32_t numNetworks;
	char networks[QEMUD_MAX_NETWORKS_NAME_BUF];
};
typedef struct qemud_packet_list_defined_networks_reply qemud_packet_list_defined_networks_reply;

struct qemud_packet_network_lookup_by_name_request {
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_network_lookup_by_name_request qemud_packet_network_lookup_by_name_request;

struct qemud_packet_network_lookup_by_name_reply {
	int32_t id;
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_lookup_by_name_reply qemud_packet_network_lookup_by_name_reply;

struct qemud_packet_network_lookup_by_uuid_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_lookup_by_uuid_request qemud_packet_network_lookup_by_uuid_request;

struct qemud_packet_network_lookup_by_uuid_reply {
	int32_t id;
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_network_lookup_by_uuid_reply qemud_packet_network_lookup_by_uuid_reply;

struct qemud_packet_network_create_request {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_network_create_request qemud_packet_network_create_request;

struct qemud_packet_network_create_reply {
	u_char uuid[QEMUD_UUID_RAW_LEN];
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_network_create_reply qemud_packet_network_create_reply;

struct qemud_packet_network_define_request {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_network_define_request qemud_packet_network_define_request;

struct qemud_packet_network_define_reply {
	u_char uuid[QEMUD_UUID_RAW_LEN];
	char name[QEMUD_MAX_NAME_LEN];
};
typedef struct qemud_packet_network_define_reply qemud_packet_network_define_reply;

struct qemud_packet_network_undefine_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_undefine_request qemud_packet_network_undefine_request;

struct qemud_packet_network_start_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_start_request qemud_packet_network_start_request;

struct qemud_packet_network_destroy_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_destroy_request qemud_packet_network_destroy_request;

struct qemud_packet_network_dump_xml_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_dump_xml_request qemud_packet_network_dump_xml_request;

struct qemud_packet_network_dump_xml_reply {
	char xml[QEMUD_MAX_XML_LEN];
};
typedef struct qemud_packet_network_dump_xml_reply qemud_packet_network_dump_xml_reply;

struct qemud_packet_network_get_bridge_name_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_get_bridge_name_request qemud_packet_network_get_bridge_name_request;

struct qemud_packet_network_get_bridge_name_reply {
	char ifname[QEMUD_MAX_IFNAME_LEN];
};
typedef struct qemud_packet_network_get_bridge_name_reply qemud_packet_network_get_bridge_name_reply;

struct qemud_packet_domain_get_autostart_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_domain_get_autostart_request qemud_packet_domain_get_autostart_request;

struct qemud_packet_domain_get_autostart_reply {
	uint32_t autostart;
};
typedef struct qemud_packet_domain_get_autostart_reply qemud_packet_domain_get_autostart_reply;

struct qemud_packet_domain_set_autostart_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
	uint32_t autostart;
};
typedef struct qemud_packet_domain_set_autostart_request qemud_packet_domain_set_autostart_request;

struct qemud_packet_network_get_autostart_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
};
typedef struct qemud_packet_network_get_autostart_request qemud_packet_network_get_autostart_request;

struct qemud_packet_network_get_autostart_reply {
	uint32_t autostart;
};
typedef struct qemud_packet_network_get_autostart_reply qemud_packet_network_get_autostart_reply;

struct qemud_packet_network_set_autostart_request {
	u_char uuid[QEMUD_UUID_RAW_LEN];
	uint32_t autostart;
};
typedef struct qemud_packet_network_set_autostart_request qemud_packet_network_set_autostart_request;

struct qemud_packet_client_data {
	qemud_packet_client_data_type type;
	union {
		qemud_packet_domain_create_request domainCreateRequest;
		qemud_packet_domain_lookup_by_id_request domainLookupByIDRequest;
		qemud_packet_domain_lookup_by_uuid_request domainLookupByUUIDRequest;
		qemud_packet_domain_lookup_by_name_request domainLookupByNameRequest;
		qemud_packet_domain_suspend_request domainSuspendRequest;
		qemud_packet_domain_resume_request domainResumeRequest;
		qemud_packet_domain_destroy_request domainDestroyRequest;
		qemud_packet_domain_get_info_request domainGetInfoRequest;
		qemud_packet_domain_save_request domainSaveRequest;
		qemud_packet_domain_restore_request domainRestoreRequest;
		qemud_packet_domain_dump_xml_request domainDumpXMLRequest;
		qemud_packet_domain_start_request domainStartRequest;
		qemud_packet_domain_define_request domainDefineRequest;
		qemud_packet_domain_undefine_request domainUndefineRequest;
		qemud_packet_network_lookup_by_uuid_request networkLookupByUUIDRequest;
		qemud_packet_network_lookup_by_name_request networkLookupByNameRequest;
		qemud_packet_network_create_request networkCreateRequest;
		qemud_packet_network_define_request networkDefineRequest;
		qemud_packet_network_undefine_request networkUndefineRequest;
		qemud_packet_network_start_request networkStartRequest;
		qemud_packet_network_destroy_request networkDestroyRequest;
		qemud_packet_network_dump_xml_request networkDumpXMLRequest;
		qemud_packet_network_get_bridge_name_request networkGetBridgeNameRequest;
		qemud_packet_domain_get_autostart_request domainGetAutostartRequest;
		qemud_packet_domain_set_autostart_request domainSetAutostartRequest;
		qemud_packet_network_get_autostart_request networkGetAutostartRequest;
		qemud_packet_network_set_autostart_request networkSetAutostartRequest;
	} qemud_packet_client_data_u;
};
typedef struct qemud_packet_client_data qemud_packet_client_data;

struct qemud_packet_server_data {
	qemud_packet_server_data_type type;
	union {
		qemud_packet_failure_reply failureReply;
		qemud_packet_get_version_reply getVersionReply;
		qemud_packet_get_node_info_reply getNodeInfoReply;
		qemud_packet_list_domains_reply listDomainsReply;
		qemud_packet_num_domains_reply numDomainsReply;
		qemud_packet_domain_create_reply domainCreateReply;
		qemud_packet_domain_lookup_by_id_reply domainLookupByIDReply;
		qemud_packet_domain_lookup_by_uuid_reply domainLookupByUUIDReply;
		qemud_packet_domain_lookup_by_name_reply domainLookupByNameReply;
		qemud_packet_domain_get_info_reply domainGetInfoReply;
		qemud_packet_domain_restore_reply domainRestoreReply;
		qemud_packet_domain_dump_xml_reply domainDumpXMLReply;
		qemud_packet_list_defined_domains_reply listDefinedDomainsReply;
		qemud_packet_num_defined_domains_reply numDefinedDomainsReply;
		qemud_packet_domain_start_reply domainStartReply;
		qemud_packet_domain_define_reply domainDefineReply;
		qemud_packet_num_networks_reply numNetworksReply;
		qemud_packet_list_networks_reply listNetworksReply;
		qemud_packet_num_defined_networks_reply numDefinedNetworksReply;
		qemud_packet_list_defined_networks_reply listDefinedNetworksReply;
		qemud_packet_network_lookup_by_uuid_reply networkLookupByUUIDReply;
		qemud_packet_network_lookup_by_name_reply networkLookupByNameReply;
		qemud_packet_network_create_reply networkCreateReply;
		qemud_packet_network_define_reply networkDefineReply;
		qemud_packet_network_dump_xml_reply networkDumpXMLReply;
		qemud_packet_network_get_bridge_name_reply networkGetBridgeNameReply;
		qemud_packet_domain_get_autostart_reply domainGetAutostartReply;
		qemud_packet_network_get_autostart_reply networkGetAutostartReply;
		qemud_packet_get_capabilities_reply getCapabilitiesReply;
	} qemud_packet_server_data_u;
};
typedef struct qemud_packet_server_data qemud_packet_server_data;

struct qemud_packet_client {
	uint32_t serial;
	struct qemud_packet_client_data data;
};
typedef struct qemud_packet_client qemud_packet_client;

struct qemud_packet_server {
	uint32_t serial;
	uint32_t inReplyTo;
	struct qemud_packet_server_data data;
};
typedef struct qemud_packet_server qemud_packet_server;
#define QEMUD_PROGRAM 0x20001A64
#define QEMUD_PKT_HEADER_XDR_LEN 8

struct qemud_packet_header {
	uint32_t length;
	uint32_t prog;
};
typedef struct qemud_packet_header qemud_packet_header;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_qemud_domain_runstate (XDR *, qemud_domain_runstate*);
extern  bool_t xdr_qemud_packet_client_data_type (XDR *, qemud_packet_client_data_type*);
extern  bool_t xdr_qemud_packet_server_data_type (XDR *, qemud_packet_server_data_type*);
extern  bool_t xdr_qemud_packet_failure_reply (XDR *, qemud_packet_failure_reply*);
extern  bool_t xdr_qemud_packet_get_version_reply (XDR *, qemud_packet_get_version_reply*);
extern  bool_t xdr_qemud_packet_get_node_info_reply (XDR *, qemud_packet_get_node_info_reply*);
extern  bool_t xdr_qemud_packet_get_capabilities_reply (XDR *, qemud_packet_get_capabilities_reply*);
extern  bool_t xdr_qemud_packet_list_domains_reply (XDR *, qemud_packet_list_domains_reply*);
extern  bool_t xdr_qemud_packet_num_domains_reply (XDR *, qemud_packet_num_domains_reply*);
extern  bool_t xdr_qemud_packet_domain_create_request (XDR *, qemud_packet_domain_create_request*);
extern  bool_t xdr_qemud_packet_domain_create_reply (XDR *, qemud_packet_domain_create_reply*);
extern  bool_t xdr_qemud_packet_domain_lookup_by_id_request (XDR *, qemud_packet_domain_lookup_by_id_request*);
extern  bool_t xdr_qemud_packet_domain_lookup_by_id_reply (XDR *, qemud_packet_domain_lookup_by_id_reply*);
extern  bool_t xdr_qemud_packet_domain_lookup_by_name_request (XDR *, qemud_packet_domain_lookup_by_name_request*);
extern  bool_t xdr_qemud_packet_domain_lookup_by_name_reply (XDR *, qemud_packet_domain_lookup_by_name_reply*);
extern  bool_t xdr_qemud_packet_domain_lookup_by_uuid_request (XDR *, qemud_packet_domain_lookup_by_uuid_request*);
extern  bool_t xdr_qemud_packet_domain_lookup_by_uuid_reply (XDR *, qemud_packet_domain_lookup_by_uuid_reply*);
extern  bool_t xdr_qemud_packet_domain_suspend_request (XDR *, qemud_packet_domain_suspend_request*);
extern  bool_t xdr_qemud_packet_domain_resume_request (XDR *, qemud_packet_domain_resume_request*);
extern  bool_t xdr_qemud_packet_domain_destroy_request (XDR *, qemud_packet_domain_destroy_request*);
extern  bool_t xdr_qemud_packet_domain_get_info_request (XDR *, qemud_packet_domain_get_info_request*);
extern  bool_t xdr_qemud_packet_domain_get_info_reply (XDR *, qemud_packet_domain_get_info_reply*);
extern  bool_t xdr_qemud_packet_domain_save_request (XDR *, qemud_packet_domain_save_request*);
extern  bool_t xdr_qemud_packet_domain_restore_request (XDR *, qemud_packet_domain_restore_request*);
extern  bool_t xdr_qemud_packet_domain_restore_reply (XDR *, qemud_packet_domain_restore_reply*);
extern  bool_t xdr_qemud_packet_domain_dump_xml_request (XDR *, qemud_packet_domain_dump_xml_request*);
extern  bool_t xdr_qemud_packet_domain_dump_xml_reply (XDR *, qemud_packet_domain_dump_xml_reply*);
extern  bool_t xdr_qemud_packet_list_defined_domains_reply (XDR *, qemud_packet_list_defined_domains_reply*);
extern  bool_t xdr_qemud_packet_num_defined_domains_reply (XDR *, qemud_packet_num_defined_domains_reply*);
extern  bool_t xdr_qemud_packet_domain_start_request (XDR *, qemud_packet_domain_start_request*);
extern  bool_t xdr_qemud_packet_domain_start_reply (XDR *, qemud_packet_domain_start_reply*);
extern  bool_t xdr_qemud_packet_domain_define_request (XDR *, qemud_packet_domain_define_request*);
extern  bool_t xdr_qemud_packet_domain_define_reply (XDR *, qemud_packet_domain_define_reply*);
extern  bool_t xdr_qemud_packet_domain_undefine_request (XDR *, qemud_packet_domain_undefine_request*);
extern  bool_t xdr_qemud_packet_num_networks_reply (XDR *, qemud_packet_num_networks_reply*);
extern  bool_t xdr_qemud_packet_list_networks_reply (XDR *, qemud_packet_list_networks_reply*);
extern  bool_t xdr_qemud_packet_num_defined_networks_reply (XDR *, qemud_packet_num_defined_networks_reply*);
extern  bool_t xdr_qemud_packet_list_defined_networks_reply (XDR *, qemud_packet_list_defined_networks_reply*);
extern  bool_t xdr_qemud_packet_network_lookup_by_name_request (XDR *, qemud_packet_network_lookup_by_name_request*);
extern  bool_t xdr_qemud_packet_network_lookup_by_name_reply (XDR *, qemud_packet_network_lookup_by_name_reply*);
extern  bool_t xdr_qemud_packet_network_lookup_by_uuid_request (XDR *, qemud_packet_network_lookup_by_uuid_request*);
extern  bool_t xdr_qemud_packet_network_lookup_by_uuid_reply (XDR *, qemud_packet_network_lookup_by_uuid_reply*);
extern  bool_t xdr_qemud_packet_network_create_request (XDR *, qemud_packet_network_create_request*);
extern  bool_t xdr_qemud_packet_network_create_reply (XDR *, qemud_packet_network_create_reply*);
extern  bool_t xdr_qemud_packet_network_define_request (XDR *, qemud_packet_network_define_request*);
extern  bool_t xdr_qemud_packet_network_define_reply (XDR *, qemud_packet_network_define_reply*);
extern  bool_t xdr_qemud_packet_network_undefine_request (XDR *, qemud_packet_network_undefine_request*);
extern  bool_t xdr_qemud_packet_network_start_request (XDR *, qemud_packet_network_start_request*);
extern  bool_t xdr_qemud_packet_network_destroy_request (XDR *, qemud_packet_network_destroy_request*);
extern  bool_t xdr_qemud_packet_network_dump_xml_request (XDR *, qemud_packet_network_dump_xml_request*);
extern  bool_t xdr_qemud_packet_network_dump_xml_reply (XDR *, qemud_packet_network_dump_xml_reply*);
extern  bool_t xdr_qemud_packet_network_get_bridge_name_request (XDR *, qemud_packet_network_get_bridge_name_request*);
extern  bool_t xdr_qemud_packet_network_get_bridge_name_reply (XDR *, qemud_packet_network_get_bridge_name_reply*);
extern  bool_t xdr_qemud_packet_domain_get_autostart_request (XDR *, qemud_packet_domain_get_autostart_request*);
extern  bool_t xdr_qemud_packet_domain_get_autostart_reply (XDR *, qemud_packet_domain_get_autostart_reply*);
extern  bool_t xdr_qemud_packet_domain_set_autostart_request (XDR *, qemud_packet_domain_set_autostart_request*);
extern  bool_t xdr_qemud_packet_network_get_autostart_request (XDR *, qemud_packet_network_get_autostart_request*);
extern  bool_t xdr_qemud_packet_network_get_autostart_reply (XDR *, qemud_packet_network_get_autostart_reply*);
extern  bool_t xdr_qemud_packet_network_set_autostart_request (XDR *, qemud_packet_network_set_autostart_request*);
extern  bool_t xdr_qemud_packet_client_data (XDR *, qemud_packet_client_data*);
extern  bool_t xdr_qemud_packet_server_data (XDR *, qemud_packet_server_data*);
extern  bool_t xdr_qemud_packet_client (XDR *, qemud_packet_client*);
extern  bool_t xdr_qemud_packet_server (XDR *, qemud_packet_server*);
extern  bool_t xdr_qemud_packet_header (XDR *, qemud_packet_header*);

#else /* K&R C */
extern bool_t xdr_qemud_domain_runstate ();
extern bool_t xdr_qemud_packet_client_data_type ();
extern bool_t xdr_qemud_packet_server_data_type ();
extern bool_t xdr_qemud_packet_failure_reply ();
extern bool_t xdr_qemud_packet_get_version_reply ();
extern bool_t xdr_qemud_packet_get_node_info_reply ();
extern bool_t xdr_qemud_packet_get_capabilities_reply ();
extern bool_t xdr_qemud_packet_list_domains_reply ();
extern bool_t xdr_qemud_packet_num_domains_reply ();
extern bool_t xdr_qemud_packet_domain_create_request ();
extern bool_t xdr_qemud_packet_domain_create_reply ();
extern bool_t xdr_qemud_packet_domain_lookup_by_id_request ();
extern bool_t xdr_qemud_packet_domain_lookup_by_id_reply ();
extern bool_t xdr_qemud_packet_domain_lookup_by_name_request ();
extern bool_t xdr_qemud_packet_domain_lookup_by_name_reply ();
extern bool_t xdr_qemud_packet_domain_lookup_by_uuid_request ();
extern bool_t xdr_qemud_packet_domain_lookup_by_uuid_reply ();
extern bool_t xdr_qemud_packet_domain_suspend_request ();
extern bool_t xdr_qemud_packet_domain_resume_request ();
extern bool_t xdr_qemud_packet_domain_destroy_request ();
extern bool_t xdr_qemud_packet_domain_get_info_request ();
extern bool_t xdr_qemud_packet_domain_get_info_reply ();
extern bool_t xdr_qemud_packet_domain_save_request ();
extern bool_t xdr_qemud_packet_domain_restore_request ();
extern bool_t xdr_qemud_packet_domain_restore_reply ();
extern bool_t xdr_qemud_packet_domain_dump_xml_request ();
extern bool_t xdr_qemud_packet_domain_dump_xml_reply ();
extern bool_t xdr_qemud_packet_list_defined_domains_reply ();
extern bool_t xdr_qemud_packet_num_defined_domains_reply ();
extern bool_t xdr_qemud_packet_domain_start_request ();
extern bool_t xdr_qemud_packet_domain_start_reply ();
extern bool_t xdr_qemud_packet_domain_define_request ();
extern bool_t xdr_qemud_packet_domain_define_reply ();
extern bool_t xdr_qemud_packet_domain_undefine_request ();
extern bool_t xdr_qemud_packet_num_networks_reply ();
extern bool_t xdr_qemud_packet_list_networks_reply ();
extern bool_t xdr_qemud_packet_num_defined_networks_reply ();
extern bool_t xdr_qemud_packet_list_defined_networks_reply ();
extern bool_t xdr_qemud_packet_network_lookup_by_name_request ();
extern bool_t xdr_qemud_packet_network_lookup_by_name_reply ();
extern bool_t xdr_qemud_packet_network_lookup_by_uuid_request ();
extern bool_t xdr_qemud_packet_network_lookup_by_uuid_reply ();
extern bool_t xdr_qemud_packet_network_create_request ();
extern bool_t xdr_qemud_packet_network_create_reply ();
extern bool_t xdr_qemud_packet_network_define_request ();
extern bool_t xdr_qemud_packet_network_define_reply ();
extern bool_t xdr_qemud_packet_network_undefine_request ();
extern bool_t xdr_qemud_packet_network_start_request ();
extern bool_t xdr_qemud_packet_network_destroy_request ();
extern bool_t xdr_qemud_packet_network_dump_xml_request ();
extern bool_t xdr_qemud_packet_network_dump_xml_reply ();
extern bool_t xdr_qemud_packet_network_get_bridge_name_request ();
extern bool_t xdr_qemud_packet_network_get_bridge_name_reply ();
extern bool_t xdr_qemud_packet_domain_get_autostart_request ();
extern bool_t xdr_qemud_packet_domain_get_autostart_reply ();
extern bool_t xdr_qemud_packet_domain_set_autostart_request ();
extern bool_t xdr_qemud_packet_network_get_autostart_request ();
extern bool_t xdr_qemud_packet_network_get_autostart_reply ();
extern bool_t xdr_qemud_packet_network_set_autostart_request ();
extern bool_t xdr_qemud_packet_client_data ();
extern bool_t xdr_qemud_packet_server_data ();
extern bool_t xdr_qemud_packet_client ();
extern bool_t xdr_qemud_packet_server ();
extern bool_t xdr_qemud_packet_header ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PROTOCOL_H_RPCGEN */
