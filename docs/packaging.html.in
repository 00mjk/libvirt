<?xml version="1.0"?>
<html>
  <body>
    <h1>Distribution packaging</h1>

    <ul id="toc"></ul>

    <p>
      This page describes the rationale behind the libvirt distribution
packaging in RPM format. The RPM specfile provided with libvirt targets
all Fedora and RHEL releases. It is split up into a number of sub-RPMs
in order to facilitate minimal installations, targetting specific
feature sets.
    </p>

    <h2><a name="real">Real packages</a></h2>

    <p>
      The so called "real" packages provide the actual file payloads
      related to libvirt. If very specific / targetted functionality
      is required, then applications can depend on one or more of these
      real packages.
    </p>

    <dl>
      <dt>libvirt-client</dt>
      <dd>This package provides the main libvirt.so library along with
        the virsh command line tool. If a C based application only wants
        to be able to manage remote hypervisors, this is all that they
        need depend on</dd>
      <dt>libvirt-devel</dt>
      <dd>This package provides the header files and libraries required
        to compile and link C applications using libvirt</dd>
      <dt>libvirt-python</dt>
      <dd>This package provides the Python binding to the C libraries.
        It will pull in the libvirt-client RPM. If a Python application
        only wants to be able to manage remote hypervisors, this is all
        that they need depend on</dd>
      <dt>libvirt-daemon</dt>
      <dd>This package provides server side libvirtd daemon, which is
        required in order to manage any stateful hypervisors (currently
        QEMU, KVM, Xen, LXC and UML).</dd>
      <dt>libvirt-daemon-config-network</dt>
      <dd>This package provides the standard configuration files for
        setting up a NAT based network</dd>
      <dt>libvirt-daemon-config-nwfilter</dt>
      <dd>This package provides the standard configuration files for
        network filter rules for ensuring clean VM traffic.</dd>
    </dl>

    <h2><a name="virtual">Virtual packages</a></h2>

    <p>
      The virtual packages provide convenient targets for application dependencies to
      pull in functionality related to specific hypervisors. Since the packaging of
      the <code>libvirt-daemon</code> RPM is expected to change in the future to split
      each hypervisor driver out into a separate RPM, applications are strongly
      recommended to depend on one of the following virtual packages, instead of
      depending directly on <code>libvirt-daemon</code>
    </p>

    <dl>
      <dt>libvirt</dt>
      <dd>This package, simply pulls in every single other server side RPM.
        If an application wants to ensure all possible libvirt drivers are installed,
        this is what they should depend on</dd>

      <dt>libvirt-daemon-qemu</dt>
      <dd>This package pulls in the server side daemon, drivers and the QEMU TCG binaries
        required to provide emulation of non-native architectures</dd>
      <dt>libvirt-daemon-kvm</dt>
      <dd>This package pulls in the server side daemon, drivers and the KVM binaries
        required to provide hardware accelerated virtualization of the native
        architectures</dd>
      <dt>libvirt-daemon-lxc</dt>
      <dd>This package pulls in the server side daemon and drivers required to
        run native Linux containers</dd>
      <dt>libvirt-daemon-uml</dt>
      <dd>This package pulls in the server side daemon and drivers required to
        run User Mode Linux. The application must still provide the actual
        UML binary kernels</dd>
      <dt>libvirt-daemon-xen</dt>
      <dd>This package pulls in the server side daemon and drivers required to
        run guests on the Xen hypervisor.</dd>

      <dt>libvirt-qemu</dt>
      <dd>This package pulls in the server side daemon, drivers and the QEMU TCG binaries
        required to provide emulation of non-native architectures</dd>
      <dt>libvirt-kvm</dt>
      <dd>This package pulls in the server side daemon, drivers and the KVM binaries
        required to provide hardware accelerated virtualization of the native
        architectures</dd>
      <dt>libvirt-lxc</dt>
      <dd>This package pulls in the server side daemon, drivers and default
        configuration files required to run native Linux containers</dd>
      <dt>libvirt-uml</dt>
      <dd>This package pulls in the server side daemon, drivers and default
        configuration files required to run User Mode Linux. The application
        must still provide the actual UML binary kernels</dd>
      <dt>libvirt-xen</dt>
      <dd>This package pulls in the server side daemon, drivers and default
        configuration files required to run guests on the Xen hypervisor.</dd>
    </dl>

  </body>
</html>
